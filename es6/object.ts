console.log("-----------------------------------------------------------------");
// Object
{
    const test1 = {
        fullName: "Huynhthanhnhan",
        age: 20
    }

    const test2 = {
        fullName: "Huynhthanhnhan",
        age: 20,
    }

    // L·∫•y key 
    console.log("L·∫•y keys d√≤ng 16", Object.keys(test1));
    // L·∫•y value
    console.log("L·∫•y values d√≤ng 18", Object.values(test1));
    // G·ªôp 2 object l·∫°i
    console.log("L·∫•y key d√≤ng 20", Object.assign(test1, test2));
    // T√°ch key value ra th√†nh array
    console.log("L·∫•y key d√≤ng 22", Object.entries(test1));
    // Ki·ªÉm tra tr·∫£ v·ªÅ boolean === v√≥ d·ª• nhan === nhan true 
    console.log("L·∫•y key d√≤ng 24", Object.is([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]));
    //


    function Dog(name) {
        this.name = name;
    }

    const dog1 = new Dog('Gabby');

    Dog.prototype.toString = function () {
        return `${this.name}`;
    };


    console.log(dog1.toString());
    // Expected output: "Gabby"
}
console.log("-----------------------------------------------------------------");

console.log("-----------------------------------------------------------------");
//Array

const arrNumber: Array<number> = [1, 2, 3, 2, 2, 4, 5, 6, 7]
const arrString: Array<string> = ["T", "N", "S", "W", "G", "üê£"];

// // gh√©p m√£ng concat(); 
// const arrConCat: Array<string | number> = arrNumber.concat(arrString as any);
// //

// const fromMethoud = Array.from(arrNumber, (x) => x + x)
// const fromOf = Array.of(arrNumber)
// console.log("checkOf:::", fromOf);

// console.log("checkFrom", fromMethoud);

// //
// const kiemtra = arrNumber.keys()

// const giatrikhoitao = 0
// // a l√† gi√° tr·ªã ban ƒë·∫ßu 
// //b gi√° tr·ªã ·ªü l·∫∑p ·ªü v·ªã tr√≠ ƒë√≥ trong m√£ng
// const resuceMethoud = arrNumber.reduce((a, b) => {
//     console.log("a", a);
//     console.log("b", b);
//     return a + b
// }, 10)
// console.log(resuceMethoud);

// console.log("someMethoud", resuceMethoud);


// const sapxep = arrNumber.sort((a, b) => b - a)

// console.log(sapxep);

// console.log("-----------------------------------------------------------------");


const newArr: number[] = [];
const seen = new Set<number>();

console.log(seen.has(0));

// for (const value of arrNumber) {
//     // N·∫øu gi√° tr·ªã ƒë√£ xu·∫•t hi·ªán trong 'seen', ki·ªÉm tra v√† th√™m v√†o newArr
//     if (seen.has(value)) {
//         if (!newArr.includes(value)) {
//             newArr.push(value); // Th√™m ph·∫ßn t·ª≠ tr√πng v√†o newArr
//         }
//     } else {
//         seen.add(value); // Th√™m gi√° tr·ªã v√†o 'seen' n·∫øu ch∆∞a g·∫∑p
//     }
// }

// console.log(newArr); // K·∫øt qu·∫£: [2, 3]


console.log("-----------------------------------------------------------------");
