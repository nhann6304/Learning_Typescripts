openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.
    You can find out more about it at [Swagger.io](http://swagger.io).
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:5500
tags:
  - name: auth
    description: Authentication
  - name: product
    description: API for Products
  - name: jobs
    description: API for Jobs
paths:
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: User login
      description: Endpoint for user login.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_email:
                  type: string
                user_pass:
                  type: string
              required:
                - user_email
                - user_pass
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Authentication token
        "401":
          description: Unauthorized

  /products:
    get:
      tags:
        - product
      summary: Get all products
      description: Retrieve a list of products.
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                      format: float

  /jobs:
    get:
      tags:
        - jobs
      summary: Get all jobs
      description: Retrieve a list of jobs.
      responses:
        "200":
          description: A list of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
